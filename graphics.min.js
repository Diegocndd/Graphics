function rgbToHex(t,e,i){function n(t){let e=t.toString(16);return 1===e.length?"0"+e:e}return"#"+n(t)+n(e)+n(i)}function hexToRgb(t){3===(t=t.replace(/^#/,"")).length&&(t=t.split("").map(t=>t+t).join(""));let e=parseInt(t,16);return[e>>16&255,e>>8&255,255&e]}function isElementChildOfCanvas(t,e){if(!(t instanceof HTMLCanvasElement))return!1;let i=e.parentNode;for(;null!==i;){if(i===t)return!0;i=i.parentNode}return!1}function luminance([t,e,i]){let n=[t,e,i].map(function(t){return(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)});return .2126*n[0]+.7152*n[1]+.0722*n[2]}function contrast(t,e){let i=luminance(t),n=luminance(e);return(Math.max(i,n)+.05)/(Math.min(i,n)+.05)}function generateContrastingColor(t){let e=hexToRgb(t),i;for(let n=0;n<256&&!(contrast(e,i=[n,n,n])>=3);n++);return i}window.Drawer={},window.Drawer.elements=[],window.Drawer.events={hasMouseMoveEvent:!1},window.Drawer.focusedElement=null;class Graphics{constructor({tag:t="div",context:e,canvas:i,id:n,ariaLabel:s="",focable:a=!1,pathColor:h="#000",textContent:o,persistent:l=!0}){if(!(i instanceof HTMLCanvasElement))throw Error("Invalid <canvas> element.");if(!n)throw Error("Element mush have an id.");if(!e)throw Error("Context is required.");this.id=n,this.children=[],this.ariaLabel=s,this.element=!1,this.context=e,this.canvas=i,this.pathColor=hexToRgb(h),this.onClickCallback=()=>{},this.onFocusCallback=()=>{},this.path=new Path2D,this.tag=t,this.autoSemantic=!0,this.focable=a,this.textContent=o,this.persistent=l;let r=window.Drawer.elements.find(t=>t.id===this.id);l&&!r&&(window.Drawer.elements.push({id:n,inSubDOM:!1,path:this.path,clickable:"button"===this.tag,onClick:null}),this.setCanvasMouseEvents(),this.initializeDraw()),this.persistent||Array.from(this.canvas.children).forEach(t=>{console.log(t.getAttribute("drawer-id")),t.getAttribute("drawer-id")===this.id&&this.canvas.removeChild(t)})}onClickCanvas(t){let e=canvas.getBoundingClientRect(),i=t.clientX-e.left,n=t.clientY-e.top,s=window.Drawer.elements.filter(t=>t.clickable),a=!1;s.reverse().forEach(({path:t,onClick:e})=>{!a&&this.context.isPointInPath(t,i,n)&&(e(),a=!0)}),t.stopImmediatePropagation()}setCanvasMouseEvents(){window.Drawer.events.hasMouseMoveEvent||(this.canvas.addEventListener("mousemove",(function(t){let e=canvas.getBoundingClientRect(),i=t.clientX-e.left,n=t.clientY-e.top,s=!0,a=window.Drawer.elements.filter(t=>t.clickable);a.forEach(({path:t})=>{this.context.isPointInPath(t,i,n)&&(s=!1,canvas.style.cursor="pointer")}),s&&(canvas.style.cursor="auto")}).bind(this)),this.x=this.onClickCanvas.bind(this),this.canvas.removeEventListener("click",this.x),this.canvas.addEventListener("click",this.x))}initializeDraw(){this.context.beginPath()}autoSubDOM(t=null){let e=window.Drawer.elements.find(t=>t.id===this.id);if(this.persistent&&e.inSubDOM)return;let i=document.createElement(this.tag);i.setAttribute("drawer-id",this.id),i.setAttribute("tabIndex",0),"button"===this.tag&&i.setAttribute("type","button"),t&&(i.textContent=t),this.ariaLabel&&(i.setAttribute("alt",this.ariaLabel),this.textContent||(i.textContent=this.ariaLabel)),canvas.appendChild(i),this.persistent&&(e.inSubDOM=!0),this.element=i}addChild(t){this.children.push(t),t.element&&(this.element.appendChild(t.element),t.onClick(this.onClickCallback),t.onFocus(this.onFocusCallback))}restoreElement(){}elementAlreadyHaveOnClick(){let t=window.Drawer.elements.find(t=>t.id===this.id);return t.hasOnClick}setHaveOnClick(t=!0){let e=window.Drawer.elements.find(t=>t.id===this.id);e.hasOnClick=t}setOnClick(t){if(this.persistent){let e=window.Drawer.elements.find(t=>t.id===this.id);e.onClick=t}else this.element.onClick=t}setPath(){if(this.persistent){let t=window.Drawer.elements.find(t=>t.id===this.id);t.path=this.path}}setElementPath(t){if(!isElementChildOfCanvas(this.canvas,t))throw"Element must be a child of the canvas!";let e=window.Drawer.elements.find(t=>t.id===this.id);this.element=t,!e.inSubDOM&&(t.setAttribute("drawer-id",this.id),t.setAttribute("alt",this.ariaLabel),this.autoSemantic=!1,e&&(e.inSubDOM=!0))}addTextContent({content:t,x:e,y:i,color:n="#FFF",textAlign:s="left",textBaseline:a="middle"}){if(!t)throw"Text content is required!";if(void 0===e||void 0===i)throw"X and Y ar required for text content!";this.context.fillStyle=n,this.context.textAlign=s,this.context.textBaseline=a,ctx.fillText(t,e,i),this.element&&(this.element.textContent=t)}draw(t=!1){t||this.path.closePath(),this.setPath(),this.autoSemantic&&(!this.persistent&&t||this.autoSubDOM());for(var e=this.canvas.width,i=this.canvas.height,n=this.context.getImageData(0,0,e,i).data,s=this.context.createImageData(e,i),a=s.data,h=0;h<n.length;h++)a[h]=n[h];for(var o=0;o<i;o++)for(var l=0;l<e;l++){var r=(o*e+l)*4;this.context.isPointInPath(this.path,l,o)&&(a[r]=this.pathColor[0],a[r+1]=this.pathColor[1],a[r+2]=this.pathColor[2],a[r+3]=255)}this.context.putImageData(s,0,0),this.textContent&&Object.keys(this.textContent).length>0&&this.addTextContent(this.textContent),this.focable&&this.onFocus(()=>{})}onClick(t){this.onClickCallback=t,this.element&&(this.element.onclick=()=>{this.element.focus(),this.onClickCallback()}),this.setOnClick(t)}onFocus(t){this.focable&&this.element&&(this.onFocusCallback=t,this.element.onfocus=this.handleFocus.bind(this),this.onBlur())}handleFocus(){this.drawFocusRing(),this.onFocusCallback()}drawFocusRing(){let t=this.context.getImageData(0,0,this.canvas.width,this.canvas.height),e=t.data;for(let i=0;i<this.canvas.height;i++)for(let n=0;n<this.canvas.width;n++){let s=this.path;if(this.context.isPointInPath(s,n,i)){let a=[{x:n-1,y:i,type:"left"},{x:n+1,y:i,type:"right"},{x:n,y:i-1,type:"top"},{x:n,y:i+1,type:"bottom"},{x:n-1,y:i-1,type:"left-top"},{x:n+1,y:i-1,type:"right-top"},{x:n-1,y:i+1,type:"left-bottom"},{x:n+1,y:i+1,type:"right-bottoms"},];a.forEach(t=>{if(!this.context.isPointInPath(s,t.x,t.y)){let a=(i*this.canvas.width+n)*4;e[a]=0,e[a+1]=0,e[a+2]=0,e[a+3]=255,"top"===t.type?this.context.isPointInPath(s,n,i+1)&&(e[a=((i+1)*this.canvas.width+n)*4]=0,e[a+1]=0,e[a+2]=0,e[a+3]=255):"left"===t.type?this.context.isPointInPath(s,n+1,i)&&(e[a=(i*this.canvas.width+(n+1))*4]=0,e[a+1]=0,e[a+2]=0,e[a+3]=255):"right"===t.type?this.context.isPointInPath(s,n-1,i)&&(e[a=(i*this.canvas.width+(n-1))*4]=0,e[a+1]=0,e[a+2]=0,e[a+3]=255):"bottom"===t.type&&this.context.isPointInPath(s,n,i-1)&&(e[a=((i-1)*this.canvas.width+n)*4]=0,e[a+1]=0,e[a+2]=0,e[a+3]=255)}})}}this.context.putImageData(t,0,0)}onBlur(){this.focable&&this.element&&(this.element.onblur=()=>{this.draw(!0)})}}class GraphicText extends Graphics{constructor({content:t,color:e,x:i,y:n,align:s,...a}){super(a),this.content=t,this.x=i,this.y=n,this.align=s,this.color=e}draw(t=null){this.context.fillStyle=t??this.color,this.context.textAlign=this.align,this.context.fillText(this.content,this.x,this.y),this.autoSemantic&&this.autoSubDOM(this.content)}onFocus(t){this.focable&&this.element&&(this.onFocusCallback=t,this.element.onfocus=this.handleFocus.bind(this),this.onBlur())}handleFocus(){this.focusText(),this.onFocusCallback()}focusText(){let t=generateContrastingColor(this.color);rgbToHex(t[0],t[1],t[2]),this.draw("#FF0000")}onBlur(){this.focable&&this.element&&(this.element.onblur=()=>{this.draw()})}}